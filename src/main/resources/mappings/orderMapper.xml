<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        <!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
     例如namespace="mapper.userMapper"就是mapper(包名)+userMapper(userMapper.xml文件去除后缀)
     -->
<mapper namespace="com.mybatis.mapper.orderMapper">
         <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
    使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
     resultType="mybatis.User"就表示将查询结果封装成一个User类的对象返回
     User类就是users表所对应的实体类
     -->
     <!--
        根据id查询得到一个user对象
    -->
    <select id="getOrder" parameterType="int" resultType="com.mybatis.mybatis.Order">
        SELECT * FROM orders where order_id=#{order_id}
    </select>

       <!--<select id="getUser" parameterType="int" resultType="com.mybatis.mybatis.User">-->
            <!--select * from USERS where id=#{id}-->
       <!--</select>-->
       <insert id="insertOrder" parameterType="com.mybatis.mybatis.Order" >
           insert into orders  values (#{order_id},#{order_no},#{order_price})
       </insert>
     <!--<update id="deleteUser" parameterType="int">-->
         <!--DELETE  from USERS where id = #{id}-->
     <!--</update>-->
    <!--<update id="updateUser" parameterType="com.mybatis.mybatis.User">-->
        <!--UPDATE USERS SET name=#{name},age=#{age},address=#{address} where id=#{id}-->
    <!--</update>-->
    <select id="getAll" resultType="com.mybatis.mybatis.Order">
        SELECT * from orders ;
    </select>
</mapper>